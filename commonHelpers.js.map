{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst inputClock = document.getElementById('datetime-picker');\nconst btnStart = document.querySelector('button[data-start]');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst min = document.querySelector('[data-minutes]');\nconst sec = document.querySelector('[data-seconds]');\n\n\nfunction styleBtnInputOff(s) {\n  switch (s) {\n    case btnStart:\n      btnStart.style.backgroundColor = '#cfcfcf';\n      btnStart.style.color = '#989898';\n      btnStart.style.cursor = 'auto';\n      break;\n\n    case inputClock:\n      inputClock.style.backgroundColor = '#FAFAFA';\n      inputClock.style.color = '#808080';\n      inputClock.style.cursor = 'auto';\n      inputClock.style.borderColor = '#808080';\n      break;\n  }\n}\n\nfunction styleBtnInputOn(s) {\n  switch (s) {\n    case btnStart:\n      btnStart.style.backgroundColor = null;\n      btnStart.style.color = null;\n      btnStart.style.cursor = 'pointer';\n      break;\n\n    case inputClock:\n      inputClock.style.backgroundColor = null;\n      inputClock.style.color = null;\n      inputClock.style.cursor = 'pointer';\n      inputClock.style.borderColor = null;\n      break;\n  }\n}\n\nflatpickr(inputClock, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    validateSelectedDate(selectedDates[0]);\n  },\n});\n\nbtnStart.disabled = true;\nstyleBtnInputOff(btnStart);\n\nfunction validateSelectedDate(selectedDate) {\n  if (selectedDate <= Date.now()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n      backgroundColor: '#EF4040',\n      titleColor: '#fff',\n      titleSize: '16px',\n      titleLineHeight: '1.5',\n      messageColor: '#fff',\n      messageSize: '16px',\n      messageLineHeight: '1.5',\n      position: 'topRight',\n      timeout: 3000,\n      progressBar: false,\n    });\n\n    btnStart.disabled = true;\n    styleBtnInputOff(btnStart);\n  } else {\n    btnStart.disabled = false;\n    styleBtnInputOn(btnStart);\n  }\n}\n\nbtnStart.addEventListener('click', onBtnStartClick);\n\nfunction onBtnStartClick() {\n  const intervalDelay = 1000;\n\n  btnStart.disabled = true;\n  styleBtnInputOff(btnStart);\n\n  inputClock.disabled = true;\n  styleBtnInputOff(inputClock);\n\n  const clockValue = inputClock.value || new Date();\n\n  const timerInt = setInterval(() => {\n    const initDate = new Date(clockValue);\n    const diffTime = initDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diffTime);\n\n  day.textContent = addLeadingZero(days);\n  hour.textContent = addLeadingZero(hours);\n  min.textContent = addLeadingZero(minutes);\n  sec.textContent = addLeadingZero(seconds);\n\n  if (diffTime < intervalDelay) {\n    clearInterval(timerInt);\n\n    inputClock.disabled = false;\n    styleBtnInputOn(inputClock);\n\n  }\n  }, intervalDelay);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return `${value}`.padStart(2, '0');\n}\n//--\n\n"],"names":["inputClock","btnStart","day","hour","min","sec","styleBtnInputOff","s","styleBtnInputOn","flatpickr","selectedDates","validateSelectedDate","selectedDate","iziToast","onBtnStartClick","clockValue","timerInt","diffTime","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAOA,MAAMA,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAGnD,SAASC,EAAiBC,EAAG,CAC3B,OAAQA,EAAC,CACP,KAAKN,EACHA,EAAS,MAAM,gBAAkB,UACjCA,EAAS,MAAM,MAAQ,UACvBA,EAAS,MAAM,OAAS,OACxB,MAEF,KAAKD,EACHA,EAAW,MAAM,gBAAkB,UACnCA,EAAW,MAAM,MAAQ,UACzBA,EAAW,MAAM,OAAS,OAC1BA,EAAW,MAAM,YAAc,UAC/B,KACH,CACH,CAEA,SAASQ,EAAgBD,EAAG,CAC1B,OAAQA,EAAC,CACP,KAAKN,EACHA,EAAS,MAAM,gBAAkB,KACjCA,EAAS,MAAM,MAAQ,KACvBA,EAAS,MAAM,OAAS,UACxB,MAEF,KAAKD,EACHA,EAAW,MAAM,gBAAkB,KACnCA,EAAW,MAAM,MAAQ,KACzBA,EAAW,MAAM,OAAS,UAC1BA,EAAW,MAAM,YAAc,KAC/B,KACH,CACH,CAEAS,EAAUT,EAAY,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQU,EAAe,CACrBC,EAAqBD,EAAc,EAAE,CACtC,CACH,CAAC,EAEDT,EAAS,SAAW,GACpBK,EAAiBL,CAAQ,EAEzB,SAASU,EAAqBC,EAAc,CACtCA,GAAgB,KAAK,OACvBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,gBAAiB,UACjB,WAAY,OACZ,UAAW,OACX,gBAAiB,MACjB,aAAc,OACd,YAAa,OACb,kBAAmB,MACnB,SAAU,WACV,QAAS,IACT,YAAa,EACnB,CAAK,EAEDZ,EAAS,SAAW,GACpBK,EAAiBL,CAAQ,IAEzBA,EAAS,SAAW,GACpBO,EAAgBP,CAAQ,EAE5B,CAEAA,EAAS,iBAAiB,QAASa,CAAe,EAElD,SAASA,GAAkB,CAGzBb,EAAS,SAAW,GACpBK,EAAiBL,CAAQ,EAEzBD,EAAW,SAAW,GACtBM,EAAiBN,CAAU,EAE3B,MAAMe,EAAaf,EAAW,OAAS,IAAI,KAErCgB,EAAW,YAAY,IAAM,CAEjC,MAAMC,EADW,IAAI,KAAKF,CAAU,EACR,KAAK,IAAG,EAC9B,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE9Df,EAAI,YAAcqB,EAAeL,CAAI,EACrCf,EAAK,YAAcoB,EAAeJ,CAAK,EACvCf,EAAI,YAAcmB,EAAeH,CAAO,EACxCf,EAAI,YAAckB,EAAeF,CAAO,EAEpCJ,EAAW,MACb,cAAcD,CAAQ,EAEtBhB,EAAW,SAAW,GACtBQ,EAAgBR,CAAU,EAG3B,EAAE,GAAa,CAClB,CAEA,SAASsB,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,MAAO,GAAGA,IAAQ,SAAS,EAAG,GAAG,CACnC"}